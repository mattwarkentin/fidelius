[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Matthew T. Warkentin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Matthew T. Warkentin. Author, maintainer.","code":""},{"path":"/index.html","id":"fidelius","dir":"","previous_headings":"","what":"Browser-Side Password-Protected HTML Documents","title":"Browser-Side Password-Protected HTML Documents","text":"“immensely complex spell involving magical concealment secret inside single, living soul. information hidden inside chosen person, Secret-Keeper, henceforth impossible find - unless, course, Secret-Keeper chooses divulge .” goal fidelius provide simple interface encrypting password-protecting static HTML files, supporting secure (optionally) self-contained -browser decryption. package sits shoulders cryptography library, sodium, provide secure methods encryption, decryption, password hashing - ’s R interface via {sodium} JavaScript API -browser decryption. package drew inspiration staticrypt, rmdprotectr, encryptedRmd projects.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Browser-Side Password-Protected HTML Documents","text":"Currently, can install development version package GitHub running following command: notice bugs like request new features, please feel free file Issue.","code":"remotes::install_github(\"mattwarkentin/fidelius\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Browser-Side Password-Protected HTML Documents","text":"two main functions use: charm() - Use function render existing R Markdown HTML document fidelius password-protected HTML document. html_password_protected() - R Markdown output format can used directly YAML frontmatter create password-protected files rendered HTML formats. cases, desired HTML document format rendered securely encrypted using sodium::data_encrypt(), based user-provided password nonce. output file HTML document contains encrypted content, nonce, machinery perform secure -browser decryption. correct password required decryption reveal hidden content. output file can hosted static site hosting service (e.g. GitHub Pages) browser-side password-protection decryption. default, name output file name input file HTML extension, can configured using output argument.","code":"library(fidelius)"},{"path":"/index.html","id":"charm","dir":"","previous_headings":"Usage","what":"charm()","title":"Browser-Side Password-Protected HTML Documents","text":"main input, charm() accepts R Markdown file (must rendered HTML format) existing HTML file. calling charm(), must either supply password function call, like charm(\"index.Rmd\", password = \"pw1234!\"), , password supplied, prompted supply password pop-(function invoked interactive R session). password can set characters can hashed using sodium::hash() algorithm. R Markdown file provided input, HTML document produced rmarkdown::render(input) saved temporary directory destroyed R session ends. See Styling Password Hint details style landing page include helpful password hint!","code":"# To supply the password interactively charm(\"index.Rmd\")"},{"path":"/index.html","id":"html_password_protected","dir":"","previous_headings":"Usage","what":"html_password_protected()","title":"Browser-Side Password-Protected HTML Documents","text":"Use html_password_protected supplying output YAML frontmatter R Markdown file. default, render content rmarkdown::html_document() encrypting password protecting document. render different format, specify output_format (may pass additional arguments desired output_format normally ): fidelius works nicely many existing HTML output formats, including offered {rmdformats} {cleanrmd} packages. moment, bookdown formats supported due unique rendering process (may change future). examples, try render document using “Knit” button RStudio using rmarkdown::render() interactive session, prompted supply password. non-interactive session, rendering fail. may include password directly YAML frontmatter, sure store R Markdown file public repository password visible plain-text. development, may wish set preview = TRUE bypass encryption password-protection steps order view document quickly. option pairs nicely xaringan::infinite_moon_reader() view changes real time.","code":"--- output: fidelius::html_password_protected --- --- output:   fidelius::html_password_protected:     output_format:        rmarkdown::html_document:         toc: true --- --- output:   fidelius::html_password_protected:     password: \"pw1234!\"     output_format: rmarkdown::html_document --- --- output:   fidelius::html_password_protected:     password: \"pw1234!\"     preview: true ---"},{"path":"/index.html","id":"styling","dir":"","previous_headings":"","what":"Styling","title":"Browser-Side Password-Protected HTML Documents","text":"may wish style aesthetics text password landing page preferences. can done simply passing stylize() function style argument, specifying style arguments directly YAML frontmatter. See ?fidelius::stylize find aspects landing page can styled.","code":"charm(\"index.Rmd\", style = stylize(button_text = \"Open Sesame!\")) --- output:   fidelius::html_password_protected:     style:       button_text: \"Open Sesame!\" ---"},{"path":"/index.html","id":"password-hint","dir":"","previous_headings":"","what":"Password Hint","title":"Browser-Side Password-Protected HTML Documents","text":"Optionally, may wish provide helpful hint anyone () trying remember password gain access document. can passing string hint argument: Providing hint include lightweight Micromodal JavaScript library provide simple modal pop-contains password hint.","code":"charm(\"index.Rmd\", password = \"pw1234!\", hint = \"A very bad password!\") --- title: \"My Protected Document\" output:   fidelius::html_password_protected:     password: \"pw1234!\"     hint: \"A very bad password!\" ---"},{"path":"/index.html","id":"portability","dir":"","previous_headings":"","what":"Portability","title":"Browser-Side Password-Protected HTML Documents","text":"may specify bundle = TRUE (bundle: true) bundle fidelius dependencies offline use. input file (output_format) also self-contained (self_contained = TRUE), fidelius HTML document entirely self-contained can easily shared others (e.g. via email) standalone document. See ?charm details.","code":""},{"path":"/index.html","id":"password-manager","dir":"","previous_headings":"","what":"Password Manager","title":"Browser-Side Password-Protected HTML Documents","text":"tried make sure fidelius compatible common password management tools (e.g. 1Pass, LastPass, etc.). password manager detecting password field fidelius landing page, please file issue includes browser password manager use, work support .","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Browser-Side Password-Protected HTML Documents","text":"Please note fidelius project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/charm.html","id":null,"dir":"Reference","previous_headings":"","what":"Password protect a document — charm","title":"Password protect a document — charm","text":"Encrypt password protect HTML document.","code":""},{"path":"/reference/charm.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Password protect a document — charm","text":"","code":"charm(   input,   password,   hint = NULL,   output = NULL,   style = stylize(),   bundle = FALSE,   minified = TRUE,   ... )"},{"path":"/reference/charm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Password protect a document — charm","text":"input Path R Markdown HTML file. password Private password unlock file. provided, asked supply password prompt working interactive session. hint Optional public password hint. output Override name output file. style Object returned stylize(). bundle Logical. decryption machinery dependencies bundled HTML document? Default FALSE. minified Logical. minified versions JavaScript dependencies included? Default TRUE. ... Arguments passed rmarkdown::render().","code":""},{"path":"/reference/charm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Password protect a document — charm","text":"input, invisibly.","code":""},{"path":"/reference/charm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Password protect a document — charm","text":"Using bundle = TRUE applies bundling decryption machinery dependencies document generated charm(). still users responsibility decide whether input self-contained passing self_contained = TRUE rmarkdown::render() using ..., specifying self_contained: true YAML header input.","code":""},{"path":"/reference/fidelius-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fidelius: Browser-Side Password-Protected HTML Documents — fidelius-package","title":"fidelius: Browser-Side Password-Protected HTML Documents — fidelius-package","text":"package provides simple interface create secure, encrypted, password-protected static HTML documents include necessary machinery secure -browser decryption.","code":""},{"path":[]},{"path":"/reference/fidelius-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fidelius: Browser-Side Password-Protected HTML Documents — fidelius-package","text":"Maintainer: Matthew T. Warkentin warkentin@lunenfeld.ca (ORCID)","code":""},{"path":"/reference/html_password_protected.html","id":null,"dir":"Reference","previous_headings":"","what":"Password protected HTML document — html_password_protected","title":"Password protected HTML document — html_password_protected","text":"R Markdown output format encrypt password protect HTML document using charm().","code":""},{"path":"/reference/html_password_protected.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Password protected HTML document — html_password_protected","text":"","code":"html_password_protected(   output_format = \"rmarkdown::html_document\",   password,   hint = NULL,   style = list(),   bundle = FALSE,   minified = TRUE,   preview = FALSE,   ... )"},{"path":"/reference/html_password_protected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Password protected HTML document — html_password_protected","text":"output_format R Markdown format renders HTML. default, render standard rmarkdown::html_document() format. may pass arguments output_format shown : password Private password unlock file. provided, asked supply password prompt working interactive session. hint Optional public password hint. style number style options configurable via stylize(). example: bundle Logical. decryption machinery dependencies bundled HTML document? Default FALSE. minified Logical. minified versions JavaScript dependencies included? Default TRUE. preview Logical. Set FALSE bypass encryption password protection render HTML document specified output_format. See Notes details. ... currently used.","code":"--- output:   fidelius::html_password_protected:     output_format:       rmarkdown::html_document:         toc: true --- output:   fidelius::html_password_protected:     style:       button_text: \"Open Sesame!\""},{"path":"/reference/html_password_protected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Password protected HTML document — html_password_protected","text":"R Markdown output format based output_format pass rmarkdown::render().","code":""},{"path":"/reference/html_password_protected.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Password protected HTML document — html_password_protected","text":"hard-code password YAML header document careful check R Markdown file public version control repository (e.g. git GitHub) password stored visible plain-text. Please use format carefully. Try using xaringan::infinite_moon_reader() preview = TRUE preview document automatic reloading slides change. done developing document, set preview = FALSE remove YAML header entirely encrypt password protect document.","code":""},{"path":[]},{"path":"/reference/stylize.html","id":null,"dir":"Reference","previous_headings":"","what":"Style password landing page — stylize","title":"Style password landing page — stylize","text":"Use function style appearance landing page password-protected HTML file.","code":""},{"path":"/reference/stylize.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Style password landing page — stylize","text":"","code":"stylize(   header_text = \"PLEASE ENTER THE PASSWORD\",   placeholder_text = \"\",   button_text = \"SUBMIT\",   font_family = \"-apple-system\",   font_size = \"16px\",   title_color = \"#2d3737\",   background_color = \"#f2f2f2\",   box_color = \"#ffffff\",   btn_font_color = \"#ffffff\",   btn_bg_color = \"#19A974\",   btn_hover_color = \"#137752\",   modal_overlay = \"rgba(0, 0, 0, 0.6)\",   modal_box_color = \"#ffffff\",   modal_title_color = \"#137752\",   modal_font_color = \"rgba(0, 0, 0, 0.8)\" )"},{"path":"/reference/stylize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style password landing page — stylize","text":"header_text Header text. placeholder_text Password input placeholder text. button_text Button text. font_family Font family. font_size Font size. title_color Title font color. background_color Background color. box_color Box color. btn_font_color Button font color. btn_bg_color Button background color. btn_hover_color Button hover color. modal_overlay Modal overlay color. modal_box_color Modal box color. modal_title_color Modal title font color. modal_font_color Modal text font color.","code":""},{"path":"/reference/stylize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style password landing page — stylize","text":"list class fidelius_styling.","code":""},{"path":"/news/index.html","id":"fidelius-development-version","dir":"Changelog","previous_headings":"","what":"fidelius (development version)","title":"fidelius (development version)","text":"R Markdown template file long creates new directory General improvements mobile experience","code":""},{"path":"/news/index.html","id":"fidelius-001","dir":"Changelog","previous_headings":"","what":"fidelius 0.0.1","title":"fidelius 0.0.1","text":"Initial public release","code":""}]
